// 3주차: 완전탐색과 백트래킹 개념강의

// dfs할때 중요한 것
// => 함수가 재귀적으로 호출된다고 했을 때, 실행순서는 그 역순이다!

// 백준 14502 연구소 문제 => 코드 참고
// 어떤 프로세스로 풀어야 할까?
// 크게 3가지 로직 => 벽 세움 > 바이러스 퍼짐 > 안전영역 크기 세기
// 벽을 효율적으로 세울 수 

// 완전탐색: 모든 경우의 수를 무식하게 탐색하는 것
// 완전탐색은 재귀로만 있는 것이 아니라 for문으로 무식하게 푸는 것도 완전탐색의 한 종류이다

// 백준 1436 영화감독 숌 문제 
// 이것도 n이 10000보다 작으니 무식하게 풀어도 되겠나라고 생각하면 됨
// 반복문을 이용한 완전탐색 문제
int n;
int main(){
    cin >> n;
    int i = 666;
    for(;; i++){
        if(to_string(i).find("666") != string::npos) n--;
        if(n == 0) break;
    }
    cout << i << "\n";
}

// 백준 1189 컴백홈 문제 => week3 코드 참고
// 핵심은 visited를 걸었다가 걸지 않는 부분이다
// 이렇게 해야 각각의 경우의 수가 그 이전의 경우의 수라는 상황에 영향을 받지 않게 된다

// 백준 17825 주사위 윷놀이 문제
// 5주차에 다시 풀으니까 대충 이해하기 => 조금 어려움..

// 백트래킹: 가지치기하며 경우의 수를 체크하는 것
// 백준 17136 색종이 붙이기 문제 => 7주차에 다시 풀음
// 어떤 map을 채우는데 색종이 개수를 최소로 해야됨

// +) 꼭 기억하기
// 어떤 문제에서 최소를 구한다 => 최대에서 최소임 (즉, 초기값을 최대로 잡음)
// 어떤 문제에서 최대를 구한다 => 최소에서 최대임 (즉, 초기값을 최소로 잡음)