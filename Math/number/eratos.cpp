// 에라토스테네스의 체: 대량의 소수를 한꺼번에 판별하고자 할 때 사용하는 방법 (모르겠으면 동빈나 유툽강의 참고)

// 알고리즘
// 1. 이차원 배열을 생성하여 값을 초기화해줌 (소수를 판별할 범위만큼 배열을 할당하여 그 인덱스에 해당하는 값을 넣어준다)
// 2. 2부터 시작해서 특정 숫자의 배수에 해당하는 숫자들을 모두 지움 (자기 자신은 지우지 않음)
// ex) 2의 배수 지움 -> 3의 배수 지움 -> 4의 배수 지움 -> ...
// 3. 이미 지워진 숫자의 경우 건너뜀
// 4. 2부터 시작하여 남아있는 숫자들을 출력함

#include <bits/stdc++.h>
using namespace std;
int number = 20;
int a[21];

// 1) 동빈나 방식
void eratos(){
    // 1. 배열 생성 및 인덱스로 값 초기화
    for(int i = 2; i <= number; i++){ // 부등호 주의
        a[i] = i;
    }
    // 2. 2부터 시작해서 특정숫자 배수 모두 지움 (자기 자신은 지우지 않음)
    for(int i = 2; i <= number; i++){
        if(a[i] == 0) continue;                     // 이미 지워진 숫자는 건너뜀
        for(int j = i * 2; j <= number; j += i){    // 특정 숫자의 배수(i*2, i*3,...)에 해당하는 숫자들을 모두 지움
            a[j] = 0;                               // 0으로 만든다는 것은 지운다는 뜻
        }
    }
    for(int i = 2; i <= number; i++){
        if(a[i] != 0) cout << a[i] << " ";
    }
}
int main(){
    eratos();
    return 0;
}